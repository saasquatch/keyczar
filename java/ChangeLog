Keyczar Java release 0.71j
==========================

2016-11-07  Andrew Sacamano <asacamano@gmail.com>

	* Really fix the DSA veritifcation - and add a flag to enable
	switching between strict and lenient behavior for DSA verification.

Keyczar Java release 0.71i
==========================

2016-10-13  Andrew Sacamano <asacamano@gmail.com>

	* Fix bug where extra bytes were being appended to signatures, and
	truncate extra bytes on signatures before sending to JCE.

Keyczar Java release 0.71h
==========================

2016-05-04  Shawn Willden <swillden@google.com>

	* Enable custom implementations of KeyczarReader
	* fixed cached thread safety regression
	* AES >128bit key hash fallback, fixes issue #105
	* Key collision robustness, refs #108 and fixes #107
	* Refactored Stream Caching to be cleaner
	* Correct/add copyright statements
	* fix hardcoded temp file paths in KeyczarToolTest
	* Change the Java source version to 1.6
	* Remove GSON & logging, for easier use on Android
	* Some whitespace cleanups.
	* Removed log4j dependency and switched it for slf4j
	* Explain file permission args
	* Create metadata and key files in mode 0600
	* Made magic number into constant and fixed up naming
	* fix bugs in lenPrefixUnpack in Util.java

Keyczar Java release 0.71g
==========================

2013-09-05  Devin Lundberg <dlundberg@google.com>

	* ASM version bumped to 3.3 to prevent exceptions
	* updated usekey for more functionality and ability to read from stdin
	  and stdout
	* Refactor of key generation parameters
	* DSA key json size bug
	* Close file and fully read file stream
	* Write metadata after keys on import
	* KeyczarTool now uses the max version instead of the number of keys
	  to create new version numbers.
	* Fixed AttachedSign bug.

Keyzcar Java release 0.71f
==========================

2012-05-22  Justin Scheiner <jmscheiner@google.com>

	* Make KeyType extensible. KeyTypes are immutable singletons (similar
	to the enum before). Existing KeyTypes were moved to
	enums.DefaultKeyType. Unsupported KeyTypes are registered at
	initialization.
	* Make it possible for third parties to extend KeyczarKey
	(visibility change).

Keyzcar Java release 0.71e
==========================

2012-05-22  Edward Kupershlak  <ekupershlak@google.com>

	* Removed static modifiers from StreamCache in Java Crypter and
	Verifier. Having them static could lead to collisions between keys in
	unrelated key sets.
	* Modified Java Keyczar to make Gson instance thread-local.

Keyzcar Java release 0.71d
==========================

2012-04-05  Shawn Willden  <swillden@google.com>

	* Added a no-argument, private constructor to RsaPrivateKey.
	Apparently there are some configurations in which Guice demands
	this, even though, it works fine most places.

Keyzcar Java release 0.71c
==========================

2012-04-05  Shawn Willden  <swillden@google.com>

	* Refactored of Key classes to make it easier to write new
  	KeyReaders which aren't in org.keyczar.
	* Renamed Padding class as RsaPadding (should not affect client
	code since it shouldn't be used by client code).
	* Added PKCS#8 key import (including support for
	password-protected PKCS#8 keys).
	* Added workaround for IBM JCE's propensity to append an extra
	null to RSA ciphertext.
	* Added SessionCrypter to provide an API that allows easy use of a
	session key for bi-directional session-based encryption/decryption
	(thanks to jmscheiner@google.com).

Keyzcar Java release 0.71b
==========================

2011-11-02  Shawn Willden  <swillden@google.com>

	* Omit '"padding"="OAEP"' from RSA key files that use the default
	padding.  Adding the padding field breaks the current Python code.
	* Added this ChangeLog so we can more easily document what changes
	from releast to release.  Will also begin tagging each release in
	git.

